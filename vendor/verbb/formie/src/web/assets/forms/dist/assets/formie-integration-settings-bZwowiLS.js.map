{"version":3,"file":"formie-integration-settings-bZwowiLS.js","sources":["../../src/js/components/IntegrationConnect.vue","../../src/js/formie-integration-settings.js"],"sourcesContent":["<template>\n    <div class=\"field lightswitch-field\">\n        <div class=\"heading\">\n            <span class=\"status\" :class=\"statusClass\"></span>\n            <span>{{ t('formie', statusText) }}</span>\n        </div>\n\n        <div class=\"input ltr\">\n            <button class=\"btn small\" :class=\"{ 'fui-loading fui-loading-tiny': loading }\" :title=\"t('formie', 'Refresh')\" @click.prevent=\"refresh\">{{ t('formie', 'Refresh') }}</button>\n\n            <modal ref=\"modal\" v-model=\"showModal\" :show-header=\"false\" :show-footer=\"false\" modal-class=\"fui-integration-error-modal\" @click-outside=\"closeModal\">\n                <template #body>\n                    <button class=\"fui-dialog-close\" @click.prevent=\"closeModal\"></button>\n\n                    <div class=\"fui-error-pane error\">\n                        <div class=\"fui-error-content\">\n                            <span data-icon=\"alert\"></span>\n\n                            <span class=\"error\" v-html=\"errorMessage\"></span>\n                        </div>\n                    </div>\n                </template>\n            </modal>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Modal from '@components/Modal.vue';\n\nexport default {\n    name: 'IntegrationConnect',\n\n    components: {\n        Modal,\n    },\n\n    props: {\n        connected: {\n            type: Boolean,\n        },\n    },\n\n    data() {\n        return {\n            statusText: '',\n            showModal: false,\n            error: false,\n            errorMessage: '',\n            loading: false,\n        };\n    },\n\n    computed: {\n        statusClass() {\n            if (this.statusText === 'Error') {\n                return 'off';\n            }\n\n            if (this.statusText === 'Connected') {\n                return 'on';\n            }\n\n            return '';\n        },\n    },\n\n    created() {\n        this.statusText = this.connected ? 'Connected' : 'Not connected';\n    },\n\n    methods: {\n        getFormInputs() {\n            let inputs = [];\n\n            // Serialize the integration pane\n            let $form = document.getElementById('main-form');\n\n            // Check for when `allowAdminChanges = false` on production - no form\n            if (!$form) {\n                $form = document.getElementById('main');\n            }\n\n            if ($form) {\n                inputs = $form.querySelectorAll('input, select, textarea');\n            }\n\n            return inputs;\n        },\n\n        serializeForm() {\n            const values = {};\n\n            this.getFormInputs().forEach(($inputElement) => {\n                const attribute = $inputElement.getAttribute('name');\n\n                values[attribute] = $inputElement.value;\n            });\n\n            return values;\n        },\n\n        refresh() {\n            this.showModal = false;\n            this.error = false;\n            this.errorMessage = '';\n            this.loading = true;\n            this.statusText = 'Connecting...';\n\n            const data = this.serializeForm();\n\n            Craft.sendActionRequest('POST', 'formie/integrations/check-connection', { data }).then((response) => {\n                this.loading = false;\n\n                if (response.data.message) {\n                    this.error = true;\n                    this.showModal = true;\n\n                    this.errorMessage = Craft.t('formie', 'An error occurred.');\n                    this.errorMessage += `<br><br><code>${response.data.message}</code>`;\n\n                    this.statusText = 'Error';\n\n                    return;\n                }\n\n                this.statusText = 'Connected';\n            }).catch((error) => {\n                this.loading = false;\n                this.error = true;\n                this.showModal = true;\n\n                this.errorMessage = error;\n\n                if (error.response.data.message) {\n                    this.errorMessage += `<br><br><code>${error.response.data.message}</code>`;\n                }\n\n                this.statusText = 'Error';\n            });\n        },\n\n        closeModal() {\n            this.showModal = false;\n        },\n    },\n\n};\n\n</script>\n\n<style lang=\"scss\">\n\n.fui-integrations-settings {\n    .modal {\n        position: absolute;\n        width: 45%;\n        height: 350px;\n        min-width: 600px;\n        min-height: auto;\n        box-shadow: 0 0 20px rgba(63, 77, 90, 0.1);\n        border: 1px solid #cdd8e4;\n        border-radius: 10px;\n    }\n}\n\n.fui-integration-error-modal .fui-dialog-close {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    z-index: 3;\n}\n\n.fui-integration-error-modal .fui-error-pane {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: 1;\n}\n\n.fui-integration-error-modal .fui-error-pane {\n    align-items: center;\n    justify-content: center;\n    display: flex;\n\n    [data-icon] {\n        display: block;\n        font-size: 3em;\n        margin-bottom: 0.5rem;\n    }\n}\n\n.fui-integration-error-modal .fui-error-content {\n    text-align: center;\n    width: 90%;\n}\n\n</style>\n","// CSS needs to be imported here as it's treated as a module\nimport '@/scss/style.scss';\n\n// Accept HMR as per: https://vitejs.dev/guide/api-hmr.html\nif (import.meta.hot) {\n    import.meta.hot.accept();\n}\n\nimport { createVueApp } from './config';\n\nimport IntegrationConnect from '@components/IntegrationConnect.vue';\n\nconst app = createVueApp({\n    // Set the delimeters to not mess around with Twig\n    delimiters: ['${', '}'],\n\n    components: {\n        IntegrationConnect,\n    },\n});\n\napp.mount('.fui-integrations-settings #details .meta');\n\n// Re-broadcast the custom `vite-script-loaded` event so that we know that this module has loaded\n// Needed because when <script> tags are appended to the DOM, the `onload` handlers\n// are not executed, which happens in the field Settings page, and in slideouts\n// Do this after the document is ready to ensure proper execution order\n$(document).ready(() => {\n    document.dispatchEvent(new CustomEvent('vite-script-loaded', { detail: { path: 'src/js/formie-integration-settings.js' } }));\n});\n"],"names":["_sfc_main","Modal","inputs","$form","values","$inputElement","attribute","data","response","error","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_createElementVNode","_hoisted_8","_openBlock","_createElementBlock","_normalizeClass","$options","_toDisplayString","_ctx","$data","_cache","_withModifiers","args","_createVNode","_component_modal","$event","_hoisted_7","app","createVueApp","IntegrationConnect"],"mappings":"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"}