!function(){"use strict";const e=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return t||(t=Math.random().toString(36).substr(2,5)),`${e}.${t}`},t=function(e,t){e&&t&&("string"==typeof t&&(t=t.split(" ")),t.forEach((t=>{e.classList.add(t)})))},i=function(e,t){e&&t&&("string"==typeof t&&(t=t.split(" ")),t.forEach((t=>{e.classList.remove(t)})))},s=function(e,t){let i=e.querySelectorAll(`[name="${t}"]`);const s=e.querySelectorAll(`[name="${t}[]"]`);return s.length&&(i=s),i},r=function(e){return`fields[${e=e.replace("{field:","").replace("{","").replace("}","").replace("]","").split("[").join("][")}]`};class a{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.initialized=!1,this.$form=e.$form,this.form=this.$form.form,this.$field=e.$field,this.successClass=this.form.getClasses("success"),this.successMessageClass=this.form.getClasses("successMessage"),this.errorClass=this.form.getClasses("error"),this.errorMessageClass=this.form.getClasses("errorMessage"),this.isVisible=!1;const t=new IntersectionObserver((e=>{0==e[0].intersectionRatio?(this.isVisible=!1,this.initialized&&this.onHide()):(this.isVisible=!0,this.initialized&&this.onShow())}),{root:this.$form});setTimeout((()=>{t.observe(this.$field)}),500)}removeSuccess(){i(this.$field,this.successClass);const e=this.$field.querySelector("[data-payment-success]");e&&e.remove()}addSuccess(e){t(this.$field,this.successClass);const i=this.$field.querySelector("[data-field-type] > div");if(!i)return console.error("Unable to find `[data-field-type] > div` to add success message.");const s=document.createElement("div");s.textContent=e,s.setAttribute("data-payment-success",""),t(s,this.successMessageClass),i.appendChild(s)}removeError(){i(this.$field,this.errorClass);const e=this.$field.querySelector("[data-payment-error]");e&&e.remove()}addError(e){t(this.$field,this.errorClass);const i=this.$field.querySelector("[data-field-type] > div");if(!i)return console.error("Unable to find `[data-field-type] > div` to add error message.");const s=document.createElement("div");s.textContent=e,s.setAttribute("data-payment-error",""),t(s,this.errorMessageClass),i.appendChild(s),this.submitHandler&&this.submitHandler.formSubmitError()}updateInputs(e,t){const i=this.$field.querySelector(`[name*="${e}"]`);i&&(i.value=t)}getBillingData(){if(!this.billingDetails)return{};const e={};if(this.billingDetails.billingName){const t=this.getFieldValue(this.billingDetails.billingName);t&&(e.name=t)}if(this.billingDetails.billingEmail){const t=this.getFieldValue(this.billingDetails.billingEmail);t&&(e.email=t)}if(this.billingDetails.billingAddress){e.address={};const t=this.getFieldValue(`${this.billingDetails.billingAddress}[address1]`),i=this.getFieldValue(`${this.billingDetails.billingAddress}[address2]`),s=this.getFieldValue(`${this.billingDetails.billingAddress}[address3]`),r=this.getFieldValue(`${this.billingDetails.billingAddress}[city]`),a=this.getFieldValue(`${this.billingDetails.billingAddress}[zip]`),l=this.getFieldValue(`${this.billingDetails.billingAddress}[state]`),n=this.getFieldValue(`${this.billingDetails.billingAddress}[country]`);t&&(e.address.line1=t),i&&(e.address.line2=i),s&&(e.address.line3=s),r&&(e.address.city=r),a&&(e.address.postal_code=a),l&&(e.address.state=l),n&&(e.address.country=n)}new CustomEvent("modifyBillingDetails",{bubbles:!0,detail:{provider:this,billing:e}});return{billing_details:e}}getFieldValue(e){return function(e,t){let i="";t=r(t);const a=s(e,t);return a&&a.forEach((e=>"checkbox"!==e.type&&"radio"!==e.type||e.checked?i=e.value:void 0)),i}(this.$form,e)}getFieldLabel(e){return function(e,t){let i="";t=r(t);const a=s(e,t);return a&&a.forEach((e=>{const t=e.closest("[data-field-type]");if(t){const e=t.querySelector("[data-field-label]");e&&(i=e.childNodes[0].textContent?.trim()??"")}})),i}(this.$form,e)}onShow(){}onHide(){}processResubmit(){this.form.config.Formie.refreshFormTokens(this.form),this.submitHandler.processSubmit(["payment"])}}window.FormiePaymentProvider=a;window.FormiePayWay=class extends a{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(e),this.$form=e.$form,this.form=this.$form.form,this.$field=e.$field,this.$input=this.$field.querySelector("[data-fui-payway-button]"),this.$input?(this.publishableKey=e.publishableKey,this.currency=e.currency,this.amountType=e.amountType,this.amountFixed=e.amountFixed,this.amountVariable=e.amountVariable,this.paywayScriptId="FORMIE_PAYWAY_SCRIPT",this.publishableKey?this.initialized=!0:console.error("Missing publishableKey for PayWay.")):console.error("Unable to find PayWay placeholder for [data-fui-payway-button]")}onShow(){this.initField()}onHide(){this.onAfterSubmit(),this.form.removeEventListener(e("onFormiePaymentValidate","payway")),this.form.removeEventListener(e("onAfterFormieSubmit","payway"))}initField(){if(document.getElementById(this.paywayScriptId))(function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e5;const i=Date.now(),s=function(r,a){window[e]?r(window[e]):t&&Date.now()-i>=t?a(new Error("timeout")):setTimeout(s.bind(this,r,a),30)};return new Promise(s)})("payway").then((()=>{this.mountCard()}));else{const e=document.createElement("script");e.id=this.paywayScriptId,e.src="https://api.payway.com.au/rest/v1/payway.js",e.async=!0,e.defer=!0,e.onload=()=>{this.mountCard()},document.body.appendChild(e)}this.form.addEventListener(this.$form,e("onFormiePaymentValidate","payway"),this.onValidate.bind(this)),this.form.addEventListener(this.$form,e("onAfterFormieSubmit","payway"),this.onAfterSubmit.bind(this))}mountCard(){payway.createCreditCardFrame({layout:"wide",publishableApiKey:this.publishableKey,tokenMode:"callback"},((e,t)=>{e?console.error(`Error creating frame: ${e.message}`):this.creditCardFrame=t}))}onValidate(e){"submit"!==this.form.submitAction||e.detail.invalid||(e.preventDefault(),this.submitHandler=e.detail.submitHandler,this.removeError(),this.creditCardFrame?this.creditCardFrame.getToken(((e,t)=>{e?(console.error(`Error getting token: ${e.message}`),this.addError(e.message)):(this.updateInputs("paywayTokenId",t.singleUseTokenId),this.submitHandler.submitForm())})):console.error("Credit Card Frame is invalid."))}onAfterSubmit(e){this.creditCardFrame&&(this.creditCardFrame.destroy(),this.creditCardFrame=null),this.updateInputs("paywayTokenId","")}}}();